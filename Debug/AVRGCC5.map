Archive member included because of file (symbol)

d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                              d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o (exit)
d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                              AVRGCC5.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
LOAD AVRGCC5.o
LOAD button.o
LOAD interrupt_lib.o
LOAD led.o
LOAD d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libm.a
LOAD d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a
LOAD d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a
LOAD d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000       0xdc
 *(.vectors)
 .vectors       0x00000000       0x26 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x10 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x00000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000042        0x4 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000046        0x2 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000046                __vector_1
                0x00000046                __vector_12
                0x00000046                __bad_interrupt
                0x00000046                __vector_6
                0x00000046                __vector_3
                0x00000046                __vector_11
                0x00000046                __vector_13
                0x00000046                __vector_17
                0x00000046                __vector_7
                0x00000046                __vector_5
                0x00000046                __vector_4
                0x00000046                __vector_9
                0x00000046                __vector_15
                0x00000046                __vector_8
                0x00000046                __vector_14
                0x00000046                __vector_10
                0x00000046                __vector_16
                0x00000046                __vector_18
 .text          0x00000048       0x3a AVRGCC5.o
                0x00000048                __vector_2
                0x00000066                main
 .text          0x00000082       0x1e button.o
                0x00000082                button_config
                0x00000088                check_button_pin_status
 .text          0x000000a0       0x18 interrupt_lib.o
                0x000000a0                external_intr_config
 .text          0x000000b8       0x20 led.o
                0x000000b8                led_config
                0x000000c6                led_func
 .text          0x000000d8        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text          0x000000d8        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000000d8                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000d8        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000000d8        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000000d8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000d8        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                0x000000d8                _exit
                0x000000d8                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000d8        0x4 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000000dc                _etext = .

.data           0x00800060        0x0 load address 0x000000dc
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 AVRGCC5.o
 .data          0x00800060        0x0 button.o
 .data          0x00800060        0x0 interrupt_lib.o
 .data          0x00800060        0x0 led.o
 .data          0x00800060        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x2
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800060        0x2 AVRGCC5.o
                0x00800060                is_button_pressed
                0x00800061                itr_is_button_pressed
 .bss           0x00800062        0x0 button.o
 .bss           0x00800062        0x0 interrupt_lib.o
 .bss           0x00800062        0x0 led.o
 .bss           0x00800062        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .bss           0x00800062        0x0 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800062                PROVIDE (__bss_end, .)
                0x000000dc                __data_load_start = LOADADDR (.data)
                0x000000dc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800062        0x0
                0x00800062                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800062                PROVIDE (__noinit_end, .)
                0x00800062                _end = .
                0x00800062                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x90
 *(.stabstr)
 .stabstr       0x00000000       0x90 d:/extensions/atmel/avrgcc/3.3.1.27/avrtoolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 AVRGCC5.o
 .debug_aranges
                0x00000020       0x20 button.o
 .debug_aranges
                0x00000040       0x20 interrupt_lib.o
 .debug_aranges
                0x00000060       0x20 led.o

.debug_pubnames
                0x00000000       0xf3
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x5a AVRGCC5.o
 .debug_pubnames
                0x0000005a       0x40 button.o
 .debug_pubnames
                0x0000009a       0x2b interrupt_lib.o
 .debug_pubnames
                0x000000c5       0x2e led.o

.debug_info     0x00000000      0x389
 *(.debug_info)
 .debug_info    0x00000000       0xcf AVRGCC5.o
 .debug_info    0x000000cf      0x188 button.o
 .debug_info    0x00000257       0x7e interrupt_lib.o
 .debug_info    0x000002d5       0xb4 led.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x265
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x85 AVRGCC5.o
 .debug_abbrev  0x00000085      0x119 button.o
 .debug_abbrev  0x0000019e       0x4c interrupt_lib.o
 .debug_abbrev  0x000001ea       0x7b led.o

.debug_line     0x00000000      0x4a5
 *(.debug_line)
 .debug_line    0x00000000      0x11e AVRGCC5.o
 .debug_line    0x0000011e      0x189 button.o
 .debug_line    0x000002a7       0xfc interrupt_lib.o
 .debug_line    0x000003a3      0x102 led.o

.debug_frame    0x00000000       0xb0
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 AVRGCC5.o
 .debug_frame   0x00000030       0x30 button.o
 .debug_frame   0x00000060       0x20 interrupt_lib.o
 .debug_frame   0x00000080       0x30 led.o

.debug_str      0x00000000      0x199
 *(.debug_str)
 .debug_str     0x00000000       0xb6 AVRGCC5.o
                                 0xfc (size before relaxing)
 .debug_str     0x000000b6       0x9a button.o
                                0x161 (size before relaxing)
 .debug_str     0x00000150       0x2a interrupt_lib.o
                                 0xd9 (size before relaxing)
 .debug_str     0x0000017a       0x1f led.o
                                 0xe6 (size before relaxing)

.debug_loc      0x00000000       0x6e
 *(.debug_loc)
 .debug_loc     0x00000000       0x46 button.o
 .debug_loc     0x00000046       0x28 led.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(AVRGCC5.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x92
 .debug_pubtypes
                0x00000000       0x1e AVRGCC5.o
 .debug_pubtypes
                0x0000001e       0x38 button.o
 .debug_pubtypes
                0x00000056       0x1e interrupt_lib.o
 .debug_pubtypes
                0x00000074       0x1e led.o
